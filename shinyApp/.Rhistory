outliers <- boxplot(SLdataset_2018$teacher_salary_Volunteer, plot=FALSE)$out
SLdataset_2018_out <- SLdataset_2018[-which(SLdataset_2018$teacher_salary_Volunteer %in% outliers),]
ggplot(SLdataset_2018_out, aes(x=teacher_salary_Volunteer, color=outcome, fill=outcome)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 30)+
geom_density(alpha=0.6)+
geom_vline(data=mu_mean, aes(xintercept=sl_std.mean, color=outcome),
linetype="dashed")+
geom_vline(data=mu_median, aes(xintercept=sl_std.median, color=outcome),
linetype="solid")+
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
labs(title="SL teachers with BEduc degree histogram", x="Number of teachers", y = "Density")+
theme_prefered
# categories
canteen <- table(SLdataset_2018$canteen, SLdataset_2018$outcome)
canteen
gkgamma(canteen)
#list of libraries
library(readr)
library(GoodmanKruskal)
#import data
SLdataset_2018 <- read_csv("~/Documents/Development/dsfsi-thuto-slim/data/wassce/SLdataset_2018.csv")
library(ggplot2)
library(plyr)
library(MESS)
#import SL data
#for my pc
SLdataset_2018 <- read.csv("~/Development/dsfsi-thuto-slim/data/wassce/SLdataset_2018.csv", header=TRUE)
# creating classes
SLdataset_2018$outcome <- ifelse(SLdataset_2018$Papers_Passed < 50,
c("fail"), c("pass"))
theme_prefered = theme(
plot.title = element_text(color="black", size=18),
axis.title.x = element_text(color="black", size=18),
axis.title.y = element_text(color="black", size=18),
axis.text = element_text(color="black", size=16),
legend.text = element_text(color="black", size=18),
legend.title = element_text(color="black", size=18),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
# list of categorical variables
cols <- c("remoteness","school_owner","financial_support","mixed_school","boarding","dev_plan","drink_water",
"latrine_condition","drink_water_source","library","canteen","elec_grid","idregion","approval_status",
"shift_status","fence","garden","internet","avail_latrine_fac","private_cubicle","sci_lab",
"rec_facilities","generator","basic_comp_skills")
#function to get crosstabs
get_category_dist <- function(df, column_list, sch_outcome){
for (cl in column_list) {
print(cl)
tt <- table(df[,cl], df[,sch_outcome])
print(tt)
}
}
#create dataframes based on quatiles
quantile(SLdataset_2018$Papers_Passed, 0.25)
#create dataframes based on quatiles
quantile(SLdataset_2018$Papers_Passed, 0.5)
#create dataframes based on quatiles
quantile(SLdataset_2018$Papers_Passed, 0.75)
#create dataframes based on quatiles
top <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed >= quantile(SLdataset_2018$Papers_Passed, 0.75)),]
low <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed <= quantile(SLdataset_2018$Papers_Passed, 0.25)),]
second <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed > quantile(SLdataset_2018$Papers_Passed, 0.25) &
SLdataset_2018$Papers_Passed <= quantile(SLdataset_2018$Papers_Passed, 0.5)),]
third <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed > quantile(SLdataset_2018$Papers_Passed, 0.5)
& quantile(SLdataset_2018$Papers_Passed, 0.75)),]
#create dataframes based on quatiles
top <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed > quantile(SLdataset_2018$Papers_Passed, 0.75)),]
low <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed <= quantile(SLdataset_2018$Papers_Passed, 0.25)),]
second <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed > quantile(SLdataset_2018$Papers_Passed, 0.25) &
SLdataset_2018$Papers_Passed <= quantile(SLdataset_2018$Papers_Passed, 0.5)),]
third <- SLdataset_2018[ which(SLdataset_2018$Papers_Passed > quantile(SLdataset_2018$Papers_Passed, 0.5)
& SLdataset_2018$Papers_Passed <= quantile(SLdataset_2018$Papers_Passed, 0.75)),]
#get a list of categorical columns to consider in the analysis
colnames(SLdataset_2018)
# list of categorical variables
cols <- c("remoteness","school_owner","financial_support","mixed_school","boarding","dev_plan","drink_water",
"latrine_condition","drink_water_source","library","canteen","elec_grid","idregion","approval_status",
"shift_status","fence","garden","internet","avail_latrine_fac","private_cubicle","sci_lab",
"rec_facilities","generator","basic_comp_skills")
#function to get crosstabs
get_category_dist <- function(df, column_list, sch_outcome){
for (cl in column_list) {
print(cl)
tt <- table(df[,cl], df[,sch_outcome])
print(tt)
}
}
get_category_dist(top, cols, 'outcome')
get_category_dist(third, cols, 'outcome')
get_category_dist(second, cols, 'outcome')
get_category_dist(low, cols, 'outcome')
get_category_dist(low, cols, 'outcome')
quantile(SLdataset_2018$Papers_Passed, 0.25))
quantile(SLdataset_2018$Papers_Passed, 0.25)
quantile(SLdataset_2018$Papers_Passed, 0.5)
quantile(SLdataset_2018$Papers_Passed, 0.75)
#top schools
#get the quatiles of papers passed variable
summary(SLdataset_2018$Papers_Passed)
get_category_dist(SLdataset_2018, cols, 'outcome')
print(gkgamma(tt))
#function to get crosstabs
get_category_dist <- function(df, column_list, sch_outcome){
for (cl in column_list) {
print(cl)
tt <- table(df[,cl], df[,sch_outcome])
print(tt)
print(gkgamma(tt))
}
}
get_category_dist(SLdataset_2018, cols, 'outcome')
get_category_dist(SLdataset_2018, cols, 'outcome')
# list of categorical variables
cols <- c("remoteness","school_owner","financial_support","mixed_school","boarding","dev_plan","drink_water",
"latrine_condition","drink_water_source","library","canteen","elec_grid","idregion","approval_status",
"shift_status","fence","garden","internet","avail_latrine_fac","private_cubicle","sci_lab",
"rec_facilities","generator","basic_comp_skills","feeder_school")
#function to get crosstabs
get_category_dist <- function(df, column_list, sch_outcome){
for (cl in column_list) {
print(cl)
tt <- table(df[,cl], df[,sch_outcome])
print(tt)
print(gkgamma(tt))
}
}
get_category_dist(SLdataset_2018, cols, 'outcome')
#get a list of categorical columns to consider in the analysis
colnames(SLdataset_2018)
# testing for significance of numeric variables
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
# testing for significance of numeric variables
nums <- c("disability","sum_latrine","chalk_board_good","full_time_teachers","teacher_BEduc",
"teacher_PostGradEduc","learning_materials","computers","sum_enrol","counsellors",
"teachers","teacher_AnyBachelor","teacher_HTC_S","avg_teacher_service_years",
"student_teacher_ratio")
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
get_numeric_significance(SLdataset_2018, nums, 'outcome')
#import SL data
#for my pc
SLdataset_2018 <- read.csv("~/Development/dsfsi-thuto-slim/data/wassce/SLdataset_2018.csv", header=TRUE)
# creating classes
SLdataset_2018$outcome <- ifelse(SLdataset_2018$Papers_Passed < 50,
c("fail"), c("pass"))
# testing for significance of numeric variables
nums <- c("disability","sum_latrine","chalk_board_good","full_time_teachers","teacher_BEduc",
"teacher_PostGradEduc","learning_materials","computers","sum_enrol","counsellors",
"teachers","teacher_AnyBachelor","teacher_HTC_S","avg_teacher_service_years",
"student_teacher_ratio")
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
# testing for significance of numeric variables
nums <- c("sum_latrine","chalk_board_good","full_time_teachers","teacher_BEduc",
"teacher_PostGradEduc","learning_materials","computers","sum_enrol","counsellors",
"teachers","teacher_AnyBachelor","teacher_HTC_S","avg_teacher_service_years",
"student_teacher_ratio")
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
View(SLdataset_2018)
# testing for significance of numeric variables
nums <- c("sum_latrine","chalk_board_good","full_time_teachers","teacher_BEduc",
"teacher_PostGradEduc","learning_materials","computers","sum_enrol","counsellors",
"teachers","teacher_AnyBachelor","teacher_HTC_S","avg_teacher_service_years",
"student_teacher_ratio")
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
fit <- aov(cl ~ sch_outcome, data=df)
print(fit)
#print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
kruskal.test(sum_latrine ~ outcome, data = SLdataset_2018)
kruskal.test(sum_latrine ~ outcome, data = SLdataset_2018)
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
fit <- aov(cl ~ sch_outcome, data=df)
print(fit)
#print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
aov(cl ~ sch_outcome, data=df)
#print(kruskal.test(cl ~ sch_outcome, data = df))
}
get_numeric_significance <- function(df, num_list, sch_outcome){
for (cl in num_list) {
print(cl)
aov(cl ~ sch_outcome, data=df)
#print(kruskal.test(cl ~ sch_outcome, data = df))
}
}
get_numeric_significance(SLdataset_2018, nums, 'outcome')
kruskal.test(disability ~ outcome, data = SLdataset_2018)
kruskal.test(disability ~ outcome, data = SLdataset_2018)
kruskal.test(chalk_board_good ~ outcome, data = SLdataset_2018)
kruskal.test(full_time_teachers ~ outcome, data = SLdataset_2018)
kruskal.test(teacher_BEduc ~ outcome, data = SLdataset_2018)
kruskal.test(teacher_PostGradEduc ~ outcome, data = SLdataset_2018)
kruskal.test(learning_materials ~ outcome, data = SLdataset_2018)
kruskal.test(computers ~ outcome, data = SLdataset_2018)
kruskal.test(computers ~ outcome, data = SLdataset_2018)
kruskal.test(sum_enrol ~ outcome, data = SLdataset_2018)
kruskal.test(counsellors~ outcome, data = SLdataset_2018)
kruskal.test(counsellors~ outcome, data = SLdataset_2018)
kruskal.test(teachers~ outcome, data = SLdataset_2018)
kruskal.test(teacher_AnyBachelor~ outcome, data = SLdataset_2018)
kruskal.test(teacher_HTC_S~ outcome, data = SLdataset_2018)
kruskal.test(avg_teacher_service_years~ outcome, data = SLdataset_2018)
kruskal.test(student_teacher_ratio~ outcome, data = SLdataset_2018)
kruskal.test(teacher_salary_Government~ outcome, data = SLdataset_2018)
kruskal.test(teacher_salary_Government~ outcome, data = SLdataset_2018)
kruskal.test(teacher_salary_Private institution~ outcome, data = SLdataset_2018)
kruskal.test('teacher_salary_Private institution'~ outcome, data = SLdataset_2018)
# list of categorical variables
cols <- c("remoteness","school_owner","financial_support","mixed_school","boarding","dev_plan","drink_water",
"latrine_condition","drink_water_source","library","canteen","elec_grid","idregion","approval_status",
"shift_status","fence","garden","internet","avail_latrine_fac","private_cubicle","sci_lab",
"rec_facilities","generator","basic_comp_skills","feeder_school")
#function to get crosstabs
get_category_dist <- function(df, column_list, sch_outcome){
for (cl in column_list) {
print(cl)
tt <- table(df[,cl], df[,sch_outcome])
print(tt)
print(gkgamma(tt))
}
}
get_category_dist(SLdataset_2018, cols, 'outcome')
install.packages("shinydashboard")
shinyUI(
dashboardPage(
# header
dashboardHeader(title = "AWI-Gen 1 QC"),
# side bar
dashboardSidebar(
# data
box(title = "Data", status = "primary", solidHeader = T),
# Instruments
box(title = "Instruments", status = "primary", solidHeader = T),
sidebarMenu(
# menu items
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
menuItem("Demography"),
)
),
# body
dashboardBody()
)
)
shiny::runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
shiny::runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp()
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
shiny::runApp('Development/AWIGEN-1-Post-QC/shinyApp')
install.packages("expss")
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
install.packages("shinyalert")
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
View(bar_plot_2)
source('~/Development/AWIGEN-1-Post-QC/shinyApp/plots.R')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
source('~/Development/AWIGEN-1-Post-QC/shinyApp/plots.R')
runApp('Development/AWIGEN-1-Post-QC/shinyApp')
shiny::runApp('Development/AWIGEN-1-Post-QC/shinyApp')
tbl = structure(list(V1 = c(1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.430202, 0.99997,
0.801974, 1e-05, 0.99997, 0.99997, 1e-05, 0.999968, 1e-05, 1e-05,
1.3e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05, 1.8e-05,
1e-05, 1.2e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1.1e-05, 1e-05, 0.642925,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 0.99997,
0.99997, 0.287976, 1e-05, 0.99997, 0.99997, 0.99997, 1e-05, 0.533994,
0.99997, 0.99997, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.307669, 0.99997,
0.604114, 0.604792, 0.29646, 0.514252, 0.99997, 0.798616, 0.516577,
1e-05, 1e-05, 1e-05, 1e-05, 0.449886, 1e-05, 1e-05, 1e-05, 1e-05,
0.790272, 1e-05, 0.576786, 0.776731), V2 = c(0.99997, 1e-05,
1e-05, 1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1.2e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 0.528138, 0.99997, 1e-05, 1e-05,
1e-05, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.712004, 0.99997,
1e-05, 1e-05, 1e-05, 0.99997, 0.465986, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 0.99997,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.05777,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.591857, 0.99997, 1e-05,
0.99997, 0.99997, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05
), V3 = c(1e-05, 1e-05, 1e-05, 0.541112, 1e-05, 1e-05, 0.329922,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.198006,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.999967, 0.451508,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.749225,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.442211,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.188,
1e-05, 0.248756, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 0.395866, 0.395188, 0.293429, 0.427968,
1e-05, 0.201364, 0.483403, 1e-05, 1e-05, 0.408123, 1e-05, 0.550094,
1e-05, 1e-05, 1e-05, 1e-05, 0.209708, 0.533729, 0.423194, 0.223249
), V4 = c(1e-05, 1e-05, 0.99997, 0.458868, 1e-05, 1e-05, 0.670058,
0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 0.99997, 0.569778, 1e-05,
1e-05, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 1e-05, 0.99997,
1e-05, 0.548472, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.471833, 1e-05, 0.250753, 0.99997, 1e-05, 1e-05, 1e-05, 0.999969,
1e-05, 0.357055, 0.557769, 1e-05, 1e-05, 0.99997, 0.99997, 1e-05,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 0.81198, 1e-05, 0.751224, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.692311,
1e-05, 1e-05, 1e-05, 0.410101, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
0.466251, 1e-05, 1e-05)), .Names = c("V1", "V2", "V3", "V4"), class = "data.frame", row.names = c(NA,
-93L))
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)
library(tidyverse)
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)
View(plot_data)
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)  %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup()
View(plot_data)
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)  %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup()  %>%
mutate(id = forcats::fct_inorder(factor(id)))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col() +
theme_classic()
tbl = structure(list(V1 = c(1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.430202, 0.99997,
0.801974, 1e-05, 0.99997, 0.99997, 1e-05, 0.999968, 1e-05, 1e-05,
1.3e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05, 1.8e-05,
1e-05, 1.2e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1.1e-05, 1e-05, 0.642925,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 0.99997,
0.99997, 0.287976, 1e-05, 0.99997, 0.99997, 0.99997, 1e-05, 0.533994,
0.99997, 0.99997, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.307669, 0.99997,
0.604114, 0.604792, 0.29646, 0.514252, 0.99997, 0.798616, 0.516577,
1e-05, 1e-05, 1e-05, 1e-05, 0.449886, 1e-05, 1e-05, 1e-05, 1e-05,
0.790272, 1e-05, 0.576786, 0.776731), V2 = c(0.99997, 1e-05,
1e-05, 1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1.2e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 0.528138, 0.99997, 1e-05, 1e-05,
1e-05, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.712004, 0.99997,
1e-05, 1e-05, 1e-05, 0.99997, 0.465986, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 0.99997,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.05777,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.591857, 0.99997, 1e-05,
0.99997, 0.99997, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05
), V3 = c(1e-05, 1e-05, 1e-05, 0.541112, 1e-05, 1e-05, 0.329922,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.198006,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.999967, 0.451508,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.749225,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.442211,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.188,
1e-05, 0.248756, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 0.395866, 0.395188, 0.293429, 0.427968,
1e-05, 0.201364, 0.483403, 1e-05, 1e-05, 0.408123, 1e-05, 0.550094,
1e-05, 1e-05, 1e-05, 1e-05, 0.209708, 0.533729, 0.423194, 0.223249
), V4 = c(1e-05, 1e-05, 0.99997, 0.458868, 1e-05, 1e-05, 0.670058,
0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 0.99997, 0.569778, 1e-05,
1e-05, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 1e-05, 0.99997,
1e-05, 0.548472, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.471833, 1e-05, 0.250753, 0.99997, 1e-05, 1e-05, 1e-05, 0.999969,
1e-05, 0.357055, 0.557769, 1e-05, 1e-05, 0.99997, 0.99997, 1e-05,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 0.81198, 1e-05, 0.751224, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.692311,
1e-05, 1e-05, 1e-05, 0.410101, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
0.466251, 1e-05, 1e-05)), .Names = c("V1", "V2", "V3", "V4"), class = "data.frame", row.names = c(NA,
-93L))
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)  %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup()  %>%
mutate(id = forcats::fct_inorder(factor(id)))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col() +
theme_classic()
library(tidyverse)
tbl = structure(list(V1 = c(1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.430202, 0.99997,
0.801974, 1e-05, 0.99997, 0.99997, 1e-05, 0.999968, 1e-05, 1e-05,
1.3e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05, 1.8e-05,
1e-05, 1.2e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1.1e-05, 1e-05, 0.642925,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 0.99997,
0.99997, 0.287976, 1e-05, 0.99997, 0.99997, 0.99997, 1e-05, 0.533994,
0.99997, 0.99997, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.307669, 0.99997,
0.604114, 0.604792, 0.29646, 0.514252, 0.99997, 0.798616, 0.516577,
1e-05, 1e-05, 1e-05, 1e-05, 0.449886, 1e-05, 1e-05, 1e-05, 1e-05,
0.790272, 1e-05, 0.576786, 0.776731), V2 = c(0.99997, 1e-05,
1e-05, 1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1.2e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997, 1e-05,
0.99997, 0.99997, 1e-05, 1e-05, 0.528138, 0.99997, 1e-05, 1e-05,
1e-05, 1e-05, 0.99997, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.712004, 0.99997,
1e-05, 1e-05, 1e-05, 0.99997, 0.465986, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997, 0.99997,
0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.05777,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.591857, 0.99997, 1e-05,
0.99997, 0.99997, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05
), V3 = c(1e-05, 1e-05, 1e-05, 0.541112, 1e-05, 1e-05, 0.329922,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.198006,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.999967, 0.451508,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.749225,
1e-05, 0.99997, 0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 0.442211,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.188,
1e-05, 0.248756, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 1e-05, 0.395866, 0.395188, 0.293429, 0.427968,
1e-05, 0.201364, 0.483403, 1e-05, 1e-05, 0.408123, 1e-05, 0.550094,
1e-05, 1e-05, 1e-05, 1e-05, 0.209708, 0.533729, 0.423194, 0.223249
), V4 = c(1e-05, 1e-05, 0.99997, 0.458868, 1e-05, 1e-05, 0.670058,
0.99997, 0.99997, 1e-05, 1e-05, 0.99997, 0.99997, 0.569778, 1e-05,
1e-05, 0.99997, 1e-05, 1e-05, 0.99997, 1e-05, 1e-05, 0.99997,
1e-05, 0.548472, 1e-05, 0.99997, 1e-05, 1e-05, 1e-05, 0.99997,
0.471833, 1e-05, 0.250753, 0.99997, 1e-05, 1e-05, 1e-05, 0.999969,
1e-05, 0.357055, 0.557769, 1e-05, 1e-05, 0.99997, 0.99997, 1e-05,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
1e-05, 1e-05, 1e-05, 0.81198, 1e-05, 0.751224, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.692311,
1e-05, 1e-05, 1e-05, 0.410101, 1e-05, 1e-05, 1e-05, 1e-05, 0.99997,
0.99997, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
0.466251, 1e-05, 1e-05)), .Names = c("V1", "V2", "V3", "V4"), class = "data.frame", row.names = c(NA,
-93L))
plot_data <- tbl %>%
mutate(id = row_number()) %>%
gather('pop', 'prob', V1:V4)  %>%
group_by(id) %>%
mutate(likely_assignment = pop[which.max(prob)],
assingment_prob = max(prob)) %>%
arrange(likely_assignment, desc(assingment_prob)) %>%
ungroup()  %>%
mutate(id = forcats::fct_inorder(factor(id)))
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col() +
theme_classic()
ggplot(plot_data, aes(id, prob, fill = pop)) +
geom_col() +
facet_grid(~likely_assignment, scales = 'free', space = 'free')
shiny::runApp('Development/AWIGEN-1-Post-QC/shinyApp')
setwd("~/Development/AWIGEN-1-Post-QC/shinyApp")
