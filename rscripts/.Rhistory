1+1
install.packages("dplyr")
#list of libraries
library(readr)
library(GoodmanKruskal)
#import data
SAdataset_2016 <- read.csv("~/Documents/Development/dsfsi-thuto-slim/data/matric/SAdataset_2016.csv")
colnames(SAdataset_2016)
#characters
carSet <- c("RateWater","RateHospital","ToiletLocation","SafetyInDark","Hhgoods_radio","Quintile",
"RateElectricity","WaterAccess","MainDwellType","ElectrInterrupt","HeadHH_Sex",
"MunicDiff","HHgoods_dvd","RateToilet","Toilet","SafetyInDay","EnergyLight",
"HHgoods_tv","Internet_cellphone","category")
charFrame <- subset(SAdataset_2016, select = carSet)
GKmatrix2 <- GKtauDataframe(as.data.frame(charFrame), includeNA = "ifany")
plot(GKmatrix2)
results <- aov(student_teacher_ratio ~ category, data = SAdataset_2016)
summary(results)
library(ggplot2)
theme_set(theme_classic())
library(dplyr)
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$Student.Teacher.ratio %in% outliers),]
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$student_teacher_ratio %in% outliers),]
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(school) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
View(SAdataset_2016)
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(category) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == 1, "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
View(SAdataset_2016)
#import data
SAdataset_2016 <- read.csv("~/Documents/Development/dsfsi-thuto-slim/data/matric/SAdataset_2016.csv")
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$student_teacher_ratio %in% outliers),]
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(category) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == 1, "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
s
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
ggplot() +
geom_density(data = SAdataset_2016, aes(x = student_teacher_ratio, colour = category),alpha=0.8,size = 1) +
geom_segment(data = cdat.dens, aes(x = rating.mean, xend = rating.mean, y = 0, yend = dens.mean, colour = category),
linetype = "dashed", size = 1) +
geom_segment(data = cdat.dens, aes(x = ci.low, xend = ci.low, y = 0, yend = dens.cilow, colour = category),
linetype = "dotted", size = 1) +
geom_segment(data = cdat.dens, aes(x = ci.upp, xend = ci.upp, y = 0, yend = dens.ciupp, colour = category),
linetype = "dotted", size = 1)+
theme(plot.title = element_text(size = 17))+
labs(title="Distribution of student-teacher ratios in categorys",
subtitle="",
caption="") + theme_grey(base_size = 19)
summary(SAdataset_2016)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
setwd("~/Documents/Development/AWIGEN-1-Post-QC/rscripts")
library(readxl)
all_sites_v2_5_3_23 <- read_excel("~/Documents/Development/AWIGEN-1-Post-QC/data/raw/all_sites_v2.5.3.23.xlsx")
View(all_sites_v2_5_3_23)
all_sites_v2.5.3.23 <- read.csv("~/Documents/Development/AWIGEN-1-Post-QC/data/raw/all_sites_v2.5.3.23.csv", header=FALSE)
View(all_sites_v2.5.3.23)
# import data
awigen <- read.csv("~/Documents/Development/AWIGEN-1-Post-QC/data/raw/all_sites_v2.5.3.23.csv", header=TRUE)
View(awigen)
View(awigen)
summary(awigen)
agincourt <- awigen[ which(awigen$site == 1),]
# filtering out rows per site
agincourt <- awigen[ which(awigen$site == 1),]
digkale <- awigen[ which(awigen$site == 2),]
nairobi <- awigen[ which(awigen$site == 3),]
nanoro <- awigen[ which(awigen$site == 4),]
navrongo <- awigen[ which(awigen$site == 5),]
soweto <- awigen[ which(awigen$site == 6),]
summary(awigen$date_of_birth_known)
colnames(awigen)
colnames(awigen)
summary(awigen$last_period_qc)
summary(awigen$months_since_last_period_c_qc)
summary(awigen$last_period_comments)
awigen$last_period_comments
awigen$months_last_period_c
awigen$months_since_last_period_c_qc
awigen$years_highest_education_qc
awigen$household_density_c
awigen$ses_c_qc
awigen$ses_site_quintile_c_qc
awigen$ses_quintile_qc
awigen$ses_c_qc
#function to get crosstabs
demo_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
df[,cl] <- as.factor(df[,cl])
summary(df[,cl])
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
}
demo_cat_freq(awigen, demographics_cat)
demographics_cat <- c(
"site",
"region_qc",
"sex",
"country",
"home_language",
"ethnicity",
"father_ethnicity",
"father_language",
"pat_gfather_ethnicity",
"pat_gfather_language",
"pat_gmother_language",
"pat_gmother_ethnicity",
"mother_ethnicity",
"mother_language",
"mat_gfather_ethnicity",
"mat_gfather_language",
"mat_gmother_ethnicity",
"mat_gmother_language",
"siblings",
"children",
"pregnant_qc",
"regular_periods",
"last_period_qc",
"months_since_last_period_c_qc",
"menopause_status_c_qc",
"menopause_manual",
"marital_status_qc",
"partnership_status_c_qc",
"highest_level_of_education_qc",
"occupation_qc",
"employment_status_c_qc",
"electricity",
"solar_energy",
"power_generator",
"alternative_power_source",
"television",
"radio",
"motor_vehicle",
"motorcycle",
"bicycle",
"refrigerator",
"washing_machine",
"sewing_machine",
"telephone",
"mobile_phone",
"microwave",
"dvd_player",
"satellite_tv_or_dstv",
"computer_or_laptop",
"internet_by_computer",
"internet_by_mobile_phone",
"electric_iron",
"fan",
"electric_or_gas_stove",
"kerosene_stove",
"plate_gas",
"electric_plate",
"torch",
"gas_lamp",
"kerosene_lamp_with_glass",
"toilet_facilities",
"portable_water",
"grinding_mill",
"tableh",
"sofa_set",
"wall_clock",
"bed",
"mattress",
"blankets",
"cattle",
"other_livestock",
"poultry",
"tractor",
"plough",
"ses_site_quintile_c_qc",
"ses_quintile_qc")
demographics_num <- c("age",
'number_of_brothers',
'number_of_sisters',
'number_of_sons',
'number_of_daughters',
"number_of_pregnancies_qc",
"number_of_live_births_qc",
"months_last_period_c",
"years_highest_education_qc",
"household_size_qc",
"number_of_rooms_qc",
"number_of_bedrooms_qc",
"num_in_house_c_qc",
"people_to_rooms_density_c_qc",
"people_to_bedrooms_density_c_qc",
"household_density_c","ses_c_qc",
)
demographics_num <- c("age",
'number_of_brothers',
'number_of_sisters',
'number_of_sons',
'number_of_daughters',
"number_of_pregnancies_qc",
"number_of_live_births_qc",
"months_last_period_c",
"years_highest_education_qc",
"household_size_qc",
"number_of_rooms_qc",
"number_of_bedrooms_qc",
"num_in_house_c_qc",
"people_to_rooms_density_c_qc",
"people_to_bedrooms_density_c_qc",
"household_density_c","ses_c_qc"
)
#function to get crosstabs
demo_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
df[,cl] <- as.factor(df[,cl])
summary(df[,cl])
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
}
demo_cat_freq(awigen, demographics_cat)
summary(df$cl)
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
summary(awigen[, 'site'])
table(awigen[, 'site'])
#function to get crosstabs
demo_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
df[,cl] <- as.factor(df[,cl])
table(df[,cl])
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
}
demo_cat_freq(awigen, demographics_cat)
#function to get crosstabs
demo_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
# df[,cl] <- as.factor(df[,cl])
table(df[,cl])
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
}
demo_cat_freq(awigen, demographics_cat)
# df[,cl] <- as.factor(df[,cl])
table(df[, cl])
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
table(awigen[, "site"])
#function to get crosstabs
demo_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
# df[,cl] <- as.factor(df[,cl])
print(table(df[, cl]))
# tt <- table(df[,cl], df[,sch_outcome])
# print(tt)
# print(gkgamma(tt))
}
}
demo_cat_freq(awigen, demographics_cat)
