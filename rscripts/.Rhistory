1+1
install.packages("dplyr")
#list of libraries
library(readr)
library(GoodmanKruskal)
#import data
SAdataset_2016 <- read.csv("~/Documents/Development/dsfsi-thuto-slim/data/matric/SAdataset_2016.csv")
colnames(SAdataset_2016)
#characters
carSet <- c("RateWater","RateHospital","ToiletLocation","SafetyInDark","Hhgoods_radio","Quintile",
"RateElectricity","WaterAccess","MainDwellType","ElectrInterrupt","HeadHH_Sex",
"MunicDiff","HHgoods_dvd","RateToilet","Toilet","SafetyInDay","EnergyLight",
"HHgoods_tv","Internet_cellphone","category")
charFrame <- subset(SAdataset_2016, select = carSet)
GKmatrix2 <- GKtauDataframe(as.data.frame(charFrame), includeNA = "ifany")
plot(GKmatrix2)
results <- aov(student_teacher_ratio ~ category, data = SAdataset_2016)
summary(results)
library(ggplot2)
theme_set(theme_classic())
library(dplyr)
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$Student.Teacher.ratio %in% outliers),]
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$student_teacher_ratio %in% outliers),]
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(school) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
View(SAdataset_2016)
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(category) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == 1, "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
View(SAdataset_2016)
#import data
SAdataset_2016 <- read.csv("~/Documents/Development/dsfsi-thuto-slim/data/matric/SAdataset_2016.csv")
outliers <- boxplot(SAdataset_2016$student_teacher_ratio, plot=FALSE)$out
SAdataset_2016 <- SAdataset_2016[-which(SAdataset_2016$student_teacher_ratio %in% outliers),]
#**************************Student-teacher ratio figure *************************************
cdat <- SAdataset_2016 %>%
group_by(category) %>%
summarise(rating.mean = mean(student_teacher_ratio),
sem = sd(student_teacher_ratio)/sqrt(length(student_teacher_ratio)),
ci.low = mean(student_teacher_ratio) - 2*sem,
ci.upp = mean(student_teacher_ratio) + 2*sem)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == 1, "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
s
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
ggplot() +
geom_density(data = SAdataset_2016, aes(x = student_teacher_ratio, colour = category),alpha=0.8,size = 1) +
geom_segment(data = cdat.dens, aes(x = rating.mean, xend = rating.mean, y = 0, yend = dens.mean, colour = category),
linetype = "dashed", size = 1) +
geom_segment(data = cdat.dens, aes(x = ci.low, xend = ci.low, y = 0, yend = dens.cilow, colour = category),
linetype = "dotted", size = 1) +
geom_segment(data = cdat.dens, aes(x = ci.upp, xend = ci.upp, y = 0, yend = dens.ciupp, colour = category),
linetype = "dotted", size = 1)+
theme(plot.title = element_text(size = 17))+
labs(title="Distribution of student-teacher ratios in categorys",
subtitle="",
caption="") + theme_grey(base_size = 19)
summary(SAdataset_2016)
cdat.dens <- ggplot_build(ggplot(SAdataset_2016, aes(x=student_teacher_ratio, colour=category)) + geom_density())$data[[1]]%>%
mutate(category = ifelse(group == "1", "high-performing category", "low-performing category")) %>%
left_join(cdat) %>%
select(y, x, category, rating.mean, sem, ci.low, ci.upp) %>%
group_by(category) %>%
mutate(dens.mean = approx(x, y, xout = rating.mean)[[2]],
dens.cilow = approx(x, y, xout = ci.low)[[2]],
dens.ciupp = approx(x, y, xout = ci.upp)[[2]]) %>%
select(-y, -x) %>%
slice(1)
shiny::runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
runApp('Documents/Development/AWIGEN-1-Post-QC/shinyApp')
setwd("~/Documents/Development/AWIGEN-1-Post-QC/rscripts")
library(ggplot2)
library(plyr)
library(readxl)
#import data from imac
awigen <- read.csv("~/Documents/Development/AWIGEN-1-Post-QC/data/raw/all_sites_v2.5.3.24.csv", header=TRUE)
# Assign real site names
site_labels <- c("Agincourt", "Digkale", "Nairobi", "Nanoro", "Navrongo", "Soweto")
awigen$site_names <- site_labels[awigen$site]
# filtering out rows per site
agincourt <- awigen[ which(awigen$site == 1),]
digkale <- awigen[ which(awigen$site == 2),]
nairobi <- awigen[ which(awigen$site == 3),]
nanoro <- awigen[ which(awigen$site == 4),]
navrongo <- awigen[ which(awigen$site == 5),]
soweto <- awigen[ which(awigen$site == 6),]
measurememts <- c("standing_height_qc",
"weight_qc",
"waist_circumference_qc",
"hip_circumference_qc",
"bp_sys_average_qc",
"bp_dia_average_qc",
"pulse_average_qc",
"visceral_fat_qc",
"subcutaneous_fat_qc",
"min_cimt_right",
"max_cimt_right",
"mean_cimt_right",
"mean_cimt_right_qc",
"min_cimt_left",
"max_cimt_left",
"mean_cimt_left",
"mean_cimt_left_qc",
"fasting_confirmation_qc",
"glucose_qc",
"s_creatinine_qc",
"insulin_qc",
"hdl_qc",
"ldl_qc",
"cholesterol_1_qc",
"triglycerides_qc",
"ur_creatinine_qc",
"ur_albumin_qc",
"ur_protein_qc")
hiv_cols <- c("tested_hiv_qc",
"hiv_status_qc",
"hiv_positive_qc",
"hiv_medication_qc",
"traditional_med_hiv_qc",
"agree_hivtest",
"result_hiv_qc")
# create age groups
agincourt$age_group <- cut(agincourt$age,
breaks=c(40, 61, 71, max(agincourt$age)),
right = FALSE,
labels = c("40-60","61-70","71 plus"))
# categorizing soweto data
soweto_sweet <- soweto[ which(soweto$cohort_id_c == "SWEET"),]
soweto_bara <- soweto[ which(soweto$cohort_id_c == "BARA"),]
soweto_men<- soweto[ which(soweto$cohort_id_c == ""),]
hiv_cols <- c("tested_hiv_qc",
"hiv_status_qc",
"hiv_positive_qc",
"hiv_medication_qc",
"traditional_med_hiv_qc",
"agree_hivtest",
"result_hiv_qc",
"hiv_final_status_c")
# get the crosstabs for hiv
hiv_cat_freq <- function(df, column_list){
for (cl in column_list) {
print(cl)
df_table <- table(df[, cl])
print(df_table)
}
}
hiv_cat_freq(nairobi, hiv_cols)
# comparing two categorical columns
table(nairobi$hiv_positive_qc, nairobi$hiv_final_status_c)
mytable
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=nairobi)
mytable
ftable(mytable)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=soweto)
mytable
ftable(mytable)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=soweto)
mytable
ftable(mytable)
table(soweto$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=agincourt)
ftable(mytable)
table(soweto$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=agincourt)
ftable(mytable)
table(agincourt$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=agincourt)
ftable(mytable)
table(agincourt$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=digkale)
ftable(mytable)
table(digkale$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=digkale)
ftable(mytable)
table(digkale$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=navrongo)
ftable(mytable)
table(navrongo$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=nanoro)
ftable(mytable)
table(nanoro$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=soweto_sweet)
ftable(mytable)
table(soweto_sweet$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=soweto_bara)
ftable(mytable)
table(soweto_bara$hiv_final_status_c)
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=soweto_men)
ftable(mytable)
table(soweto_men$hiv_final_status_c)
# subsetting agincourt data according to age groups
agincourt_40_60 <- agincourt[ which(agincourt$age_group == "40-60"),]
agincourt_61_70 <- agincourt[ which(agincourt$age_group == "61-70"),]
agincourt_71_Plus <- agincourt[ which(agincourt$age_group == "71 plus"),]
# pivot table for multiple columns
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=agincourt_40_60)
ftable(mytable)
table(agincourt_40_60$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ hiv_positive_qc+result_hiv_qc+hiv_final_status_c, data=agincourt_61_70)
ftable(mytable)
table(agincourt_61_70$hiv_final_status_c)
# comparing two categorical columns
table(nairobi$hiv_positive_qc, nairobi$hiv_status_qc)
# pivot table for multiple columns
mytable <- xtabs(~ hiv_status_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=nairobi)
ftable(mytable)
table(agincourt_61_70$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ hiv_status_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=nairobi)
ftable(mytable)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_status_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=nairobi)
ftable(mytable)
table(nairobi$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_positive_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=nairobi)
ftable(mytable)
table(nairobi$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_positive_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=soweto)
ftable(mytable)
table(soweto$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_positive_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=agincourt)
ftable(mytable)
table(agincourt$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_positive_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=navrongo)
ftable(mytable)
table(navrongo$hiv_final_status_c)
# pivot table for multiple columns
mytable <- xtabs(~ tested_hiv_qc+hiv_positive_qc+agree_hivtest_qc+result_hiv_qc+hiv_final_status_c, data=digkale)
ftable(mytable)
table(digkale$hiv_final_status_c)
